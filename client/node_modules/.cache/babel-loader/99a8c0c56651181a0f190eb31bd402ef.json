{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\TechNotes\\\\client\\\\src\\\\features\\\\notes\\\\NewNoteForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAddNewNoteMutation } from \"./notesApiSlice\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewNoteForm = _ref => {\n  _s();\n\n  var _error$data;\n\n  let {\n    users\n  } = _ref;\n  const [addNewNote, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useAddNewNoteMutation();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const [userId, setUserId] = useState(users[0].id);\n  useEffect(() => {\n    if (isSuccess) {\n      setTitle('');\n      setText('');\n      setUserId('');\n      navigate('/dash/notes');\n    }\n  }, [isSuccess, navigate]);\n\n  const onTitleChanged = e => setTitle(e.target.value);\n\n  const onTextChanged = e => setText(e.target.value);\n\n  const onUserIdChanged = e => setUserId(e.target.value);\n\n  const canSave = [title, text, userId].every(Boolean) && !isLoading;\n\n  const onSaveNoteClicked = async e => {\n    e.preventDefault();\n\n    if (canSave) {\n      await addNewNote({\n        user: userId,\n        title,\n        text\n      });\n    }\n  };\n\n  const options = users.map(user => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: user.id,\n      children: [\" \", user.username]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  });\n  const errClass = isError ? \"errmsg\" : \"offscreen\";\n  const validTitleClass = !title ? \"form__input--incomplete\" : '';\n  const validTextClass = !text ? \"form__input--incomplete\" : '';\n\n  const content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: errClass,\n      children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: onSaveNoteClicked,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__title-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"New Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__action-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-button\",\n            title: \"Save\",\n            disabled: !canSave,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label\",\n        htmlFor: \"title\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form__input ${validTitleClass}`,\n        id: \"title\",\n        name: \"title\",\n        type: \"text\",\n        autoComplete: \"off\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label\",\n        htmlFor: \"text\",\n        children: \"Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: `form__input form__input--text ${validTextClass}`,\n        id: \"text\",\n        name: \"text\",\n        value: text,\n        onChange: onTextChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label form__checkbox-container\",\n        htmlFor: \"username\",\n        children: \"ASSIGNED TO:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"username\",\n        name: \"username\",\n        className: \"form__select\",\n        value: userId,\n        onChange: onUserIdChanged,\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n\n  return content;\n};\n\n_s(NewNoteForm, \"LOOYC8bIkRy9B1JXYMCBUhzGzy4=\", false, function () {\n  return [useAddNewNoteMutation, useNavigate];\n});\n\n_c = NewNoteForm;\nexport default NewNoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewNoteForm\");","map":{"version":3,"names":["useState","useEffect","useNavigate","useAddNewNoteMutation","FontAwesomeIcon","faSave","NewNoteForm","users","addNewNote","isLoading","isSuccess","isError","error","navigate","title","setTitle","text","setText","userId","setUserId","id","onTitleChanged","e","target","value","onTextChanged","onUserIdChanged","canSave","every","Boolean","onSaveNoteClicked","preventDefault","user","options","map","username","errClass","validTitleClass","validTextClass","content","data","message"],"sources":["D:/Downloads/TechNotes/client/src/features/notes/NewNoteForm.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useAddNewNoteMutation } from \"./notesApiSlice\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\"\n\nconst NewNoteForm = ({ users }) => {\n\n    const [addNewNote, {\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    }] = useAddNewNoteMutation()\n\n    const navigate = useNavigate()\n\n    const [title, setTitle] = useState('')\n    const [text, setText] = useState('')\n    const [userId, setUserId] = useState(users[0].id)\n\n    useEffect(() => {\n        if (isSuccess) {\n            setTitle('')\n            setText('')\n            setUserId('')\n            navigate('/dash/notes')\n        }\n    }, [isSuccess, navigate])\n\n    const onTitleChanged = e => setTitle(e.target.value)\n    const onTextChanged = e => setText(e.target.value)\n    const onUserIdChanged = e => setUserId(e.target.value)\n\n    const canSave = [title, text, userId].every(Boolean) && !isLoading\n\n    const onSaveNoteClicked = async (e) => {\n        e.preventDefault()\n        if (canSave) {\n            await addNewNote({ user: userId, title, text })\n        }\n    }\n\n    const options = users.map(user => {\n        return (\n            <option\n                key={user.id}\n                value={user.id}\n            > {user.username}</option >\n        )\n    })\n\n    const errClass = isError ? \"errmsg\" : \"offscreen\"\n    const validTitleClass = !title ? \"form__input--incomplete\" : ''\n    const validTextClass = !text ? \"form__input--incomplete\" : ''\n\n    const content = (\n        <>\n            <p className={errClass}>{error?.data?.message}</p>\n\n            <form className=\"form\" onSubmit={onSaveNoteClicked}>\n                <div className=\"form__title-row\">\n                    <h2>New Note</h2>\n                    <div className=\"form__action-buttons\">\n                        <button\n                            className=\"icon-button\"\n                            title=\"Save\"\n                            disabled={!canSave}\n                        >\n                            <FontAwesomeIcon icon={faSave} />\n                        </button>\n                    </div>\n                </div>\n                <label className=\"form__label\" htmlFor=\"title\">\n                    Title:</label>\n                <input\n                    className={`form__input ${validTitleClass}`}\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    value={title}\n                    onChange={onTitleChanged}\n                />\n\n                <label className=\"form__label\" htmlFor=\"text\">\n                    Text:</label>\n                <textarea\n                    className={`form__input form__input--text ${validTextClass}`}\n                    id=\"text\"\n                    name=\"text\"\n                    value={text}\n                    onChange={onTextChanged}\n                />\n\n                <label className=\"form__label form__checkbox-container\" htmlFor=\"username\">\n                    ASSIGNED TO:</label>\n                <select\n                    id=\"username\"\n                    name=\"username\"\n                    className=\"form__select\"\n                    value={userId}\n                    onChange={onUserIdChanged}\n                >\n                    {options}\n                </select>\n\n            </form>\n        </>\n    )\n\n    return content\n}\n\nexport default NewNoteForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}