{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\TechNotes\\\\client\\\\src\\\\features\\\\users\\\\NewUserForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useAddNewUserMutation } from \"./usersApiSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { ROLES } from \"../../config/roles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[A-z]{3,20}$/;\nconst PWD_REGEX = /^[A-z0-9!@#$%]{4,12}$/;\n\nconst NewUserForm = () => {\n  _s();\n\n  var _error$data;\n\n  const [addNewUser, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useAddNewUserMutation();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [validUsername, setValidUsername] = useState(false);\n  const [password, setPassword] = useState('');\n  const [validPassword, setValidPassword] = useState(false);\n  const [roles, setRoles] = useState([\"Employee\"]);\n  useEffect(() => {\n    setValidUsername(USER_REGEX.test(username));\n  }, [username]);\n  useEffect(() => {\n    setValidPassword(PWD_REGEX.test(password));\n  }, [password]);\n  useEffect(() => {\n    if (isSuccess) {\n      setUsername('');\n      setPassword('');\n      setRoles([]);\n      navigate('/dash/users');\n    }\n  }, [isSuccess, navigate]);\n\n  const onUsernameChanged = e => setUsername(e.target.value);\n\n  const onPasswordChanged = e => setPassword(e.target.value);\n\n  const onRolesChanged = e => {\n    const values = Array.from(e.target.selectedOptions, //HTMLCollection \n    option => option.value);\n    setRoles(values);\n  };\n\n  const canSave = [roles.length, validUsername, validPassword].every(Boolean) && !isLoading;\n\n  const onSaveUserClicked = async e => {\n    e.preventDefault();\n\n    if (canSave) {\n      await addNewUser({\n        username,\n        password,\n        roles\n      });\n    }\n  };\n\n  const options = Object.values(ROLES).map(role => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: role,\n      children: [\" \", role]\n    }, role, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  });\n  const errClass = isError ? \"errmsg\" : \"offscreen\";\n  const validUserClass = !validUsername ? 'form__input--incomplete' : '';\n  const validPwdClass = !validPassword ? 'form__input--incomplete' : '';\n  const validRolesClass = !Boolean(roles.length) ? 'form__input--incomplete' : '';\n\n  const content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: errClass,\n      children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: onSaveUserClicked,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__title-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__action-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon-button\",\n            title: \"Save\",\n            disabled: !canSave,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSave\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label\",\n        htmlFor: \"username\",\n        children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nowrap\",\n          children: \"[3-20 letters]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form__input ${validUserClass}`,\n        id: \"username\",\n        name: \"username\",\n        type: \"text\",\n        autoComplete: \"off\",\n        value: username,\n        onChange: onUsernameChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label\",\n        htmlFor: \"password\",\n        children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nowrap\",\n          children: \"[4-12 chars incl. !@#$%]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form__input ${validPwdClass}`,\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: onPasswordChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label\",\n        htmlFor: \"roles\",\n        children: \"ASSIGNED ROLES:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"roles\",\n        name: \"roles\",\n        className: `form__select ${validRolesClass}`,\n        multiple: true,\n        size: \"3\",\n        value: roles,\n        onChange: onRolesChanged,\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n\n  return content;\n};\n\n_s(NewUserForm, \"12rclpw6AJakzl9R7viEGFu+Eys=\", false, function () {\n  return [useAddNewUserMutation, useNavigate];\n});\n\n_c = NewUserForm;\nexport default NewUserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewUserForm\");","map":{"version":3,"names":["useState","useEffect","useAddNewUserMutation","useNavigate","FontAwesomeIcon","faSave","ROLES","USER_REGEX","PWD_REGEX","NewUserForm","addNewUser","isLoading","isSuccess","isError","error","navigate","username","setUsername","validUsername","setValidUsername","password","setPassword","validPassword","setValidPassword","roles","setRoles","test","onUsernameChanged","e","target","value","onPasswordChanged","onRolesChanged","values","Array","from","selectedOptions","option","canSave","length","every","Boolean","onSaveUserClicked","preventDefault","options","Object","map","role","errClass","validUserClass","validPwdClass","validRolesClass","content","data","message"],"sources":["D:/Downloads/TechNotes/client/src/features/users/NewUserForm.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useAddNewUserMutation } from \"./usersApiSlice\"\nimport { useNavigate } from \"react-router-dom\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\"\nimport { ROLES } from \"../../config/roles\"\n\nconst USER_REGEX = /^[A-z]{3,20}$/\nconst PWD_REGEX = /^[A-z0-9!@#$%]{4,12}$/\n\nconst NewUserForm = () => {\n\n    const [addNewUser, {\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    }] = useAddNewUserMutation()\n\n    const navigate = useNavigate()\n\n    const [username, setUsername] = useState('')\n    const [validUsername, setValidUsername] = useState(false)\n    const [password, setPassword] = useState('')\n    const [validPassword, setValidPassword] = useState(false)\n    const [roles, setRoles] = useState([\"Employee\"])\n\n    useEffect(() => {\n        setValidUsername(USER_REGEX.test(username))\n    }, [username])\n\n    useEffect(() => {\n        setValidPassword(PWD_REGEX.test(password))\n    }, [password])\n\n    useEffect(() => {\n        if (isSuccess) {\n            setUsername('')\n            setPassword('')\n            setRoles([])\n            navigate('/dash/users')\n        }\n    }, [isSuccess, navigate])\n\n    const onUsernameChanged = e => setUsername(e.target.value)\n    const onPasswordChanged = e => setPassword(e.target.value)\n\n    const onRolesChanged = e => {\n        const values = Array.from(\n            e.target.selectedOptions, //HTMLCollection \n            (option) => option.value\n        )\n        setRoles(values)\n    }\n\n    const canSave = [roles.length, validUsername, validPassword].every(Boolean) && !isLoading\n\n    const onSaveUserClicked = async (e) => {\n        e.preventDefault()\n        if (canSave) {\n            await addNewUser({ username, password, roles })\n        }\n    }\n\n    const options = Object.values(ROLES).map(role => {\n        return (\n            <option\n                key={role}\n                value={role}\n\n            > {role}</option >\n        )\n    })\n\n    const errClass = isError ? \"errmsg\" : \"offscreen\"\n    const validUserClass = !validUsername ? 'form__input--incomplete' : ''\n    const validPwdClass = !validPassword ? 'form__input--incomplete' : ''\n    const validRolesClass = !Boolean(roles.length) ? 'form__input--incomplete' : ''\n\n\n    const content = (\n        <>\n            <p className={errClass}>{error?.data?.message}</p>\n\n            <form className=\"form\" onSubmit={onSaveUserClicked}>\n                <div className=\"form__title-row\">\n                    <h2>New User</h2>\n                    <div className=\"form__action-buttons\">\n                        <button\n                            className=\"icon-button\"\n                            title=\"Save\"\n                            disabled={!canSave}\n                        >\n                            <FontAwesomeIcon icon={faSave} />\n                        </button>\n                    </div>\n                </div>\n                <label className=\"form__label\" htmlFor=\"username\">\n                    Username: <span className=\"nowrap\">[3-20 letters]</span></label>\n                <input\n                    className={`form__input ${validUserClass}`}\n                    id=\"username\"\n                    name=\"username\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    value={username}\n                    onChange={onUsernameChanged}\n                />\n\n                <label className=\"form__label\" htmlFor=\"password\">\n                    Password: <span className=\"nowrap\">[4-12 chars incl. !@#$%]</span></label>\n                <input\n                    className={`form__input ${validPwdClass}`}\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={onPasswordChanged}\n                />\n\n                <label className=\"form__label\" htmlFor=\"roles\">\n                    ASSIGNED ROLES:</label>\n                <select\n                    id=\"roles\"\n                    name=\"roles\"\n                    className={`form__select ${validRolesClass}`}\n                    multiple={true}\n                    size=\"3\"\n                    value={roles}\n                    onChange={onRolesChanged}\n                >\n                    {options}\n                </select>\n\n            </form>\n        </>\n    )\n\n    return content\n}\nexport default NewUserForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}