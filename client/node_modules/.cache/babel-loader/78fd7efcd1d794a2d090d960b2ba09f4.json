{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\TechNotes\\\\client\\\\src\\\\features\\\\notes\\\\NotesList.js\",\n    _s = $RefreshSig$();\n\nimport { useGetNotesQuery } from \"./notesApiSlice\";\nimport Note from \"./Note\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotesList = () => {\n  _s();\n\n  const {\n    data: notes,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetNotesQuery(undefined, {\n    pollingInterval: 15000,\n    refetchOnFocus: true,\n    refetchOnMountOrArgChange: true\n  });\n  let content;\n  if (isLoading) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 30\n  }, this);\n\n  if (isError) {\n    var _error$data;\n\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errmsg\",\n      children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }, this);\n  }\n\n  if (isSuccess) {\n    const {\n      ids\n    } = notes;\n    const tableContent = ids !== null && ids !== void 0 && ids.length ? ids.map(noteId => /*#__PURE__*/_jsxDEV(Note, {\n      noteId: noteId\n    }, noteId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }, this)) : null;\n    content = /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table--notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table__thead\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__status\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__created\",\n            children: \"Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__updated\",\n            children: \"Updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__title\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__username\",\n            children: \"Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            className: \"table__th note__edit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n  return content;\n};\n\n_s(NotesList, \"xypOq5roQVQHPZgcku2GueLeRe4=\", false, function () {\n  return [useGetNotesQuery];\n});\n\n_c = NotesList;\nexport default NotesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["useGetNotesQuery","Note","NotesList","data","notes","isLoading","isSuccess","isError","error","undefined","pollingInterval","refetchOnFocus","refetchOnMountOrArgChange","content","message","ids","tableContent","length","map","noteId"],"sources":["D:/Downloads/TechNotes/client/src/features/notes/NotesList.js"],"sourcesContent":["import { useGetNotesQuery } from \"./notesApiSlice\"\nimport Note from \"./Note\"\n\nconst NotesList = () => {\n    const {\n        data: notes,\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    } = useGetNotesQuery(undefined, {\n        pollingInterval: 15000,\n        refetchOnFocus: true,\n        refetchOnMountOrArgChange: true\n    })\n\n    let content\n\n    if (isLoading) content = <p>Loading...</p>\n\n    if (isError) {\n        content = <p className=\"errmsg\">{error?.data?.message}</p>\n    }\n\n    if (isSuccess) {\n        const { ids } = notes\n\n        const tableContent = ids?.length\n            ? ids.map(noteId => <Note key={noteId} noteId={noteId} />)\n            : null\n\n        content = (\n            <table className=\"table table--notes\">\n                <thead className=\"table__thead\">\n                    <tr>\n                        <th scope=\"col\" className=\"table__th note__status\">Username</th>\n                        <th scope=\"col\" className=\"table__th note__created\">Created</th>\n                        <th scope=\"col\" className=\"table__th note__updated\">Updated</th>\n                        <th scope=\"col\" className=\"table__th note__title\">Title</th>\n                        <th scope=\"col\" className=\"table__th note__username\">Owner</th>\n                        <th scope=\"col\" className=\"table__th note__edit\">Edit</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {tableContent}\n                </tbody>\n            </table>\n        )\n    }\n\n    return content\n}\nexport default NotesList"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,iBAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM;IACFC,IAAI,EAAEC,KADJ;IAEFC,SAFE;IAGFC,SAHE;IAIFC,OAJE;IAKFC;EALE,IAMFR,gBAAgB,CAACS,SAAD,EAAY;IAC5BC,eAAe,EAAE,KADW;IAE5BC,cAAc,EAAE,IAFY;IAG5BC,yBAAyB,EAAE;EAHC,CAAZ,CANpB;EAYA,IAAIC,OAAJ;EAEA,IAAIR,SAAJ,EAAeQ,OAAO,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAV;;EAEf,IAAIN,OAAJ,EAAa;IAAA;;IACTM,OAAO,gBAAG;MAAG,SAAS,EAAC,QAAb;MAAA,UAAuBL,KAAvB,aAAuBA,KAAvB,sCAAuBA,KAAK,CAAEL,IAA9B,gDAAuB,YAAaW;IAApC;MAAA;MAAA;MAAA;IAAA,QAAV;EACH;;EAED,IAAIR,SAAJ,EAAe;IACX,MAAM;MAAES;IAAF,IAAUX,KAAhB;IAEA,MAAMY,YAAY,GAAGD,GAAG,SAAH,IAAAA,GAAG,WAAH,IAAAA,GAAG,CAAEE,MAAL,GACfF,GAAG,CAACG,GAAJ,CAAQC,MAAM,iBAAI,QAAC,IAAD;MAAmB,MAAM,EAAEA;IAA3B,GAAWA,MAAX;MAAA;MAAA;MAAA;IAAA,QAAlB,CADe,GAEf,IAFN;IAIAN,OAAO,gBACH;MAAO,SAAS,EAAC,oBAAjB;MAAA,wBACI;QAAO,SAAS,EAAC,cAAjB;QAAA,uBACI;UAAA,wBACI;YAAI,KAAK,EAAC,KAAV;YAAgB,SAAS,EAAC,wBAA1B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAI,KAAK,EAAC,KAAV;YAAgB,SAAS,EAAC,yBAA1B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAI,KAAK,EAAC,KAAV;YAAgB,SAAS,EAAC,yBAA1B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII;YAAI,KAAK,EAAC,KAAV;YAAgB,SAAS,EAAC,uBAA1B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJJ,eAKI;YAAI,KAAK,EAAC,KAAV;YAAgB,SAAS,EAAC,0BAA1B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QALJ,eAMI;YAAI,KAAK,EAAC,KAAV;YAAgB,SAAS,EAAC,sBAA1B;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QANJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAWI;QAAA,UACKG;MADL;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAiBH;;EAED,OAAOH,OAAP;AACH,CAhDD;;GAAMX,S;UAOEF,gB;;;KAPFE,S;AAiDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}